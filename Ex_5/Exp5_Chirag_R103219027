{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Exp5_Chirag_R103219027.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyOWlO8z1AIOd+NQEgW52kRS",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Chirag-123456/Operation-Reasearch-lab/blob/main/Exp5_Chirag_R103219027.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Installing Library**\n"
      ],
      "metadata": {
        "id": "MVILh_HzYYfo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install scipy\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jr5sm3-8YavT",
        "outputId": "ad7f1b08-48ed-42a1-e875-94cc1a60f35e"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (1.4.1)\n",
            "Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.7/dist-packages (from scipy) (1.19.5)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Loading Library**"
      ],
      "metadata": {
        "id": "vvDlSaCbYqTH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from scipy import *"
      ],
      "metadata": {
        "id": "SMjCIJYQYr33"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**PROBLEM-1**"
      ],
      "metadata": {
        "id": "q6zRcWduYvZP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from scipy.optimize import linprog\n",
        "import time\n",
        "c = [-3,-2,-3]\n",
        "A = [[2,1,1],[1,3,1],[3,4,2]]\n",
        "b = [2,6,8]\n",
        "x1_bnds = (0, None)\n",
        "x2_bnds = (0, None)\n",
        "x3_bnds = (0, None)\n",
        "begin = time.time()\n",
        "res = linprog(c, A_eq=A, b_eq=b, bounds=(x1_bnds, x2_bnds, x3_bnds), method='simplex', options={\"disp\":True})\n",
        "print(\"Time taken: %s seconds\"%(time.time()-begin))\n",
        "print(res)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3tbbg074Y0kx",
        "outputId": "387ad71b-56f6-48dc-c59a-1f1fb711208f"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Optimization terminated successfully.\n",
            "         Current function value: -4.000000   \n",
            "         Iterations: 3\n",
            "Time taken: 0.13844728469848633 seconds\n",
            "     con: array([0., 0., 0.])\n",
            "     fun: -4.0\n",
            " message: 'Optimization terminated successfully.'\n",
            "     nit: 3\n",
            "   slack: array([], dtype=float64)\n",
            "  status: 0\n",
            " success: True\n",
            "       x: array([0., 2., 0.])\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:10: OptimizeWarning: A_eq does not appear to be of full row rank. To improve performance, check the problem formulation for redundant equality constraints.\n",
            "  # Remove the CWD from sys.path while we load stuff.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**PROBLEM-2**"
      ],
      "metadata": {
        "id": "V-wPMRP3Y5G3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "c = [3,-4,3]\n",
        "A = [[5,6,2],[1,-3,-5],[2,5,-4]]\n",
        "b = [5,-8,4]\n",
        "x1_bnds = (0, None)\n",
        "x2_bnds = (0, None)\n",
        "x3_bnds = (0, None)\n",
        "begin = time.time()\n",
        "res2 = linprog(c, A, b, bounds=(x1_bnds, x2_bnds, x3_bnds), method='simplex', options={\"disp\":True})\n",
        "print(\"Time taken: %s seconds\"%(time.time()-begin))\n",
        "print(res2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZjSqNO0oY8zG",
        "outputId": "46aba509-f109-403c-c257-986739d2a7cf"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Optimization terminated successfully.\n",
            "         Current function value: 2.625000    \n",
            "         Iterations: 3\n",
            "Time taken: 0.01149892807006836 seconds\n",
            "     con: array([], dtype=float64)\n",
            "     fun: 2.624999999999999\n",
            " message: 'Optimization terminated successfully.'\n",
            "     nit: 3\n",
            "   slack: array([ 0.0000000e+00, -8.8817842e-16,  7.6250000e+00])\n",
            "  status: 0\n",
            " success: True\n",
            "       x: array([0.   , 0.375, 1.375])\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**PROBLEM-3**\n",
        "\n"
      ],
      "metadata": {
        "id": "xHtFgWReZAOY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "c = [-2,-4,-4,3]\n",
        "A = [[1,1,1,0],[1,4,0,1],[3,4,2,0]]\n",
        "b = [4,8,8]\n",
        "x1_bnds = (0, None)\n",
        "x2_bnds = (0, None)\n",
        "x3_bnds = (0, None)\n",
        "x4_bnds = (0, None)\n",
        "begin=time.time()\n",
        "res3 = linprog(c, A_eq=A, b_eq=b, bounds=(x1_bnds, x2_bnds, x3_bnds, x4_bnds), method='simplex', options={\"disp\":True})\n",
        "print(\"Time taken: %s seconds\"%(time.time()-begin))\n",
        "print(res3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D5rjaSKJZEpn",
        "outputId": "c5cd7742-6205-498d-e449-aa64bb708c7a"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Optimization terminated successfully.\n",
            "         Current function value: 8.000000    \n",
            "         Iterations: 3\n",
            "Time taken: 0.007397651672363281 seconds\n",
            "     con: array([0., 0., 0.])\n",
            "     fun: 8.0\n",
            " message: 'Optimization terminated successfully.'\n",
            "     nit: 3\n",
            "   slack: array([], dtype=float64)\n",
            "  status: 0\n",
            " success: True\n",
            "       x: array([0., 0., 4., 8.])\n"
          ]
        }
      ]
    }
  ]
}
